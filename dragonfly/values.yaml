# default configuration for dragonfly

# no of dragonfly replicas to deploy
replicaCount: 1

image:
  repository: docker.dragonflydb.io/dragonflydb/dragonfly
  
  

# default resource requirements, you can change it according to your needs.
resources: 
  requests:
    # min cpu millisecs
    cpu:  100m
    # min memory for dragonfly deployment
    memory: 128Mi
  
  limits:
    #max cpu millisecs for dragonfly deployment
    cpu: 1000m
    # max memory limit for dragonfly deployment 
    memory: 512Mi



service:
  
  type: ClusterIP
  # Load balancer static ip to use when service type is set to LoadBalancer
  loadBalancerIP: ""
  # Dragonfly default service port
  port: 6379
  
  metrics:
  # name for the metrics port
    portName: metrics
  # serviceType for the metrics service
    serviceType: ClusterIP
  
  

storage:
  # you can set this to true for production use cases,if you want dragonfly to persist data.
  enabled: false

  storageClassName: ""
  #  Volume size to request for the PVC,default set to 128Mb
  requests: 128Mi
  


# extra  arguments to pass to dragonfly binary
extraArgs: 
  # database dump file for backups
  - --dbfilename=dump.rdb
  # takes snapshots 
  - --snapshot_cron=* * * * * 

  

securityContexts:
  capabilities:
    drop:
      - ALL
  # sets file system permission as read-only for dragonfly container
  readOnlyRootFilesystem: true
  # sets the dragon container to run as non-root 
  runAsNonRoot: true
  # run dragonfly container with user-Id as 1000
  runAsUser: 1000
  


# the below fields serviceMonitor and promtheiumsRule requires you have promtheus operator running in your cluster

#serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  #enabled: false
  # -- namespace in which to deploy the ServiceMonitor CR. defaults to the application namespace
  #namespace: ""
  # -- additional labels to apply to the metrics
  #labels: {}
  # -- additional annotations to apply to the metrics
  #annotations: {}
  # -- scrape interval
  #interval: 10s
  # -- scrape timeout
  #scrapeTimeout: 10s

#prometheusRule:
  # -- Deploy a PrometheusRule
  #enabled: false
  # -- PrometheusRule.Spec
  # https://awesome-prometheus-alerts.grep.to/rules
  #spec: []

